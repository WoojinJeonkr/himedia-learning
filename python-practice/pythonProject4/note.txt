class: oop(객체지향 프로그래밍, Object Oriented Programming)를 하기 위한 대상의 특징을 가진 틀
object: class를 가지고 찍어낸 oop의 대상
        대상 == object(객체)
        class를 가지고 찍어낸 대상인 object이
        우리가 프로그래밍할 때 사용하는 실제이다.
        it에서 실제는 instance(인스턴스)라고 한다.
        class의 instance == object

RAM:
1) 클래스의 원본 저장 영역(메서드 영역)
   클래스(멤버변수+멤버함수 원본)
2) 함수를 호출하면 함수를 처리하도록 영역 할당(스택 영역)
   main 함수에서 시작
   함수를 처리하기 위해서는 변수 선언이 필요(c1, c2가 필요)
   함수를 처리하기 위해서는 공간이 필요.
   c1 = Car() : c1, color, shape 공간이 생성
   c1은 main 함수 안에 생기는 지역변수(스택 영역)
   color, shape은 많은 양이 될 수 있으므로 힙 영역에 할당
3) 많은 양의 데이터를 저장하기 위한 영역(힙 영역)

객체지향 프로그래밍의 2대 원칙
-------------------------
1) 응집도(높): 클래스가 얼마나 하나의 역할에 응집되어 만들어져 있는지 정도,
             응집도가 높다라는 것은 하나의 역할만을 정의해놓았다는 것.
             높을수록 좋다.
2) 결합도(낮): 클래스와 클래스 간 결합 시, 대체불가능하게 결합하는 경우는
             유지 보수가 어렵다. 다른 클래스로 대체 가능하게 해놓는 것을
             결합도가 낮다라고 표현. 낮을수록 좋다.
--------------------------
# 이니셜라이저 : 객체가 생성될 때마다
               멤버 변수의 값을 넣어줌(초기화)
# 멤버변수 :
# 멤버함수 :